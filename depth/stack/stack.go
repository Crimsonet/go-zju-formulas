/**
 * Author:  Nyxvectar Yan
 * Repo:    guts
 * Created: 07/30/2025
 */

package stack

func GutsStack() {
	// 一个多小时,干瞪眼.
	// 栈, 就是寄吧原神, 像寄吧原神一样一个主线挂一堆支线
	// 你玩的寄吧原神主线总是要去过支线的对不对, 不然就卡
	// 你主线不让你玩的呐寄吧的原神, 记住你现在主线玩到哪
	// 里了然后逼你去玩支线A, 支线A过程中又有个寄吧的支线
	// B, 以此类推. 主线是先拿到的,ABC都是以后拿到的,结果
	// 到头来你要优先完成C,然后才有的B...最后你有的主线玩
	// 栈就是你到每个线上的位置, 在什么条件下卡住了, 然后
	// 接着做前置任务去了. 每个这样卡住的寄吧点就是栈帧,
	// 寄吧原神卡得太多了栈帧也会自动扩大所以并不需要你考
	// 虑栈够不够用滴问题所以原神就可以瞎寄吧前置任务了!
	// 这就是go的内存调用栈, 讲完~
}
